/*
 * Developed by Arthur Arantes Faria 
 * Graduating in Computer Science on UNIFOR-MG BRASIL
 * arthurarantes23@hotmail.com
 */

package UserInterface;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lexico.Analisador;

/**
 *
 * @author aarantes23
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Classe para comunicação com o usuário
     */
    
    private final DefaultTableModel dmErrorTable;
    private final DefaultTableModel dmTokenTable;   

    /**
     * Cria o formulário UserInterface
     */
    public UserInterface() {
        initComponents();
        // Define o estilo 		
        StyledDocument doc = new StyledDocument() {};
        SourceCodePane.setDocument(doc);
        dmTokenTable = (DefaultTableModel) TabelaTokens.getModel();
        dmErrorTable = (DefaultTableModel) TabelaErros.getModel();		
    }

    public DefaultTableModel getDmErrorTable() {
        return dmErrorTable;
    }

    public DefaultTableModel getDmTokenTable() {
        return dmTokenTable;
    }	
	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EscolherArquivo = new javax.swing.JFileChooser();
        Token = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaTokens = new javax.swing.JTable();
        Codigo_C = new javax.swing.JLabel();
        Erros = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelaErros = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        SourceCodePane = new javax.swing.JTextPane();
        AnalisarButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuOpcoes = new javax.swing.JMenu();
        AbrirArquivo = new javax.swing.JMenuItem();
        Analisar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analisador Lexico, Liguagem L+");
        setAlwaysOnTop(true);

        Token.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Token.setText("Tokens");

        TabelaTokens.setAutoCreateRowSorter(true);
        TabelaTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Tipo do Token", "Linha", "Coluna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelaTokens.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(TabelaTokens);

        Codigo_C.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Codigo_C.setText("Digite aqui o código em C");

        Erros.setText("Erros");

        TabelaErros.setAutoCreateRowSorter(true);
        TabelaErros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Tipo do Token", "Linha", "Coluna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TabelaErros);

        jScrollPane4.setViewportView(SourceCodePane);
        SourceCodePane.getAccessibleContext().setAccessibleName("");

        AnalisarButton.setText("Analisar");
        AnalisarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalisarButtonActionPerformed(evt);
            }
        });

        jMenuOpcoes.setText("Opções");

        AbrirArquivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        AbrirArquivo.setText("Abrir Arquivo");
        AbrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirArquivoActionPerformed(evt);
            }
        });
        jMenuOpcoes.add(AbrirArquivo);

        Analisar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        Analisar.setText("Analisar");
        Analisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalisarActionPerformed(evt);
            }
        });
        jMenuOpcoes.add(Analisar);

        jMenuBar1.add(jMenuOpcoes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Codigo_C, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(Erros)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane3))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AnalisarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114)
                                .addComponent(Token, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Codigo_C))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Token, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AnalisarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Erros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    private void AnalisarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        AnalisarButtonActionPerformed(evt);
    }                                        
	
    /**
     * Evento ao clicar no botão Analisar
     * Ao clicar, cria o Objeto LexerAnalyzer. Define as tabelas como Zero
     * @param evt = Clique no botão
     */    
    private void AnalisarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalisarButtonActionPerformed
        Analisador lan = new Analisador(this);
        dmTokenTable.setRowCount(0);
        dmErrorTable.setRowCount(0);
        // Chama o metodo de analise, do LexerAnalyzer, passando o codigo do text area como parametro
        try {
            lan.analisaArquivo(lan.fromStringParaReader(SourceCodePane.getText()));
        } catch (IOException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        lan.printTokens();
    }//GEN-LAST:event_AnalisarButtonActionPerformed
	
    
    /**
     * Carrega o arquivo C, opcional
     * @param evt = Clique no botão do menu superior
     */
    private void AbrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirArquivoActionPerformed
        int returnVal = EscolherArquivo.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = EscolherArquivo.getSelectedFile();
            try {
                String cCode = readFile(file.getAbsolutePath());
                SourceCodePane.setText(cCode);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao abrir o arquivo: " +
                        file.getAbsolutePath(), "Erro ao abrir o arquivo",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AbrirArquivoActionPerformed

    /**
     * Lê o arquivo aberto e coloca-o no text área
     * @param fileName = Caminho do arquivo
     * @return
     * @throws IOException 
     */
    String readFile(String fileName) throws IOException {

        BufferedReader br = new BufferedReader(new FileReader(fileName));
        StringBuilder sb = new StringBuilder();

        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append("\n");
            line = br.readLine();
        }
        return sb.toString();
    }
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirArquivo;
    private javax.swing.JMenuItem Analisar;
    private javax.swing.JButton AnalisarButton;
    private javax.swing.JLabel Codigo_C;
    private javax.swing.JLabel Erros;
    private javax.swing.JFileChooser EscolherArquivo;
    private javax.swing.JTextPane SourceCodePane;
    private javax.swing.JTable TabelaErros;
    private javax.swing.JTable TabelaTokens;
    private javax.swing.JLabel Token;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuOpcoes;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables


}
